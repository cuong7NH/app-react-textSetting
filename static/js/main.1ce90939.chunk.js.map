{"version":3,"sources":["components/ColorPicker.js","components/SizeSetting.js","components/Result.js","components/Reset.js","App.js","reportWebVitals.js","index.js"],"names":["ColorPicker","props","state","colors","color","this","onReceiveColor","active","elColors","map","index","classColor","className","classNames","onClick","colorChoice","Component","SizeSetting","value","onChangeSize","fontsize","type","changeSize","Result","style","fontSize","Reset","reset","bind","App","onSetColor","resetState","params","setState","console","log","width","height","viewBox","class","fill","xmlns","fill-rule","d","fillRule","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ce90939.chunk.js","sourcesContent":["\r\n\r\n\r\nimport React, {Component} from 'react';\r\nimport classNames  from 'classnames';\r\n\r\n\r\nclass ColorPicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            colors: ['red', 'green', 'blue', 'yellow']\r\n        }\r\n    }\r\n    colorChoice(color) {\r\n        this.props.onReceiveColor(color);\r\n        if(this.props.active === true) {\r\n            \r\n        }\r\n\r\n    }\r\n    render() {\r\n        const elColors = this.state.colors.map((color, index) => {\r\n            const classColor = 'color-picker--'+ color;\r\n            return (\r\n                \r\n                <span key ={index}\r\n                className = {classNames(classColor, {'active' : this.props.color === color})}\r\n                onClick = {() => this.colorChoice(color)}></span>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"color-picker\">\r\n                <div className=\"color-picker__head\">\r\n                    <span>Color Picker</span>\r\n                </div>\r\n                <div className=\"color-picker__body\">\r\n                    {elColors}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ColorPicker;","\r\nimport React, {Component} from 'react';\r\n\r\n\r\nclass SizeSetting extends Component {\r\n    \r\n\r\n    changeSize(value) {\r\n        this.props.onChangeSize(value);\r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n        return(\r\n           \r\n            <div className =\"size-picker\">\r\n                <div className =\"size-picker__head\">\r\n                <span >Size : {this.props.fontsize}px</span>\r\n                </div>\r\n                <div className =\"size-picker__body\">\r\n                    <button type= \"button\"\r\n                    onClick = {() => this.changeSize(-2)}\r\n                    >\r\n                        Giảm\r\n                    </button>\r\n                    <button type= \"button\"\r\n                    onClick = {() => this.changeSize(2)}\r\n                    >\r\n                        Tăng\r\n                    </button>\r\n                </div>\r\n            </div> \r\n        )\r\n    };\r\n}\r\nexport default SizeSetting;\r\n\r\n","\r\n\r\n\r\n\r\nimport React, {Component} from 'react';\r\nimport classNames  from 'classnames';\r\n\r\n\r\nclass Result extends Component {\r\n    \r\n    render() {\r\n        const classColor = 'app-type__input--' + this.props.color;\r\n        return (\r\n            <div className=\"app-type\">\r\n                <div className=\"app-type__context\">\r\n        <span>Color: {this.props.color} - FontSize: {this.props.fontsize}px</span>\r\n                </div>\r\n                <div style={{fontSize: this.props.fontsize+'px'}} className={classNames('app-type__input', classColor)} >\r\n                    Nội dung Context\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Result;","\r\nimport React, {Component} from 'react';\r\n\r\n\r\nclass Reset extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.reset = this.reset.bind(this);\r\n    }\r\n    reset() {\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"btn-reset\">\r\n                <button onClick = {this.reset}>reset</button>\r\n             </div>\r\n        )\r\n    };\r\n}\r\nexport default Reset;","import React, {Component} from 'react';\nimport './App.css';\nimport ColorPicker from './components/ColorPicker';\nimport SizeSetting from './components/SizeSetting';\nimport Result from './components/Result';\nimport Reset from './components/Reset';\n\n\n\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: 'red',\n      fontsize : 16,\n    }\n\n    this.onSetColor = this.onSetColor.bind(this);\n    this.onChangeSize = this.onChangeSize.bind(this);\n    this.resetState = this.resetState.bind(this)\n  }\n\n  onSetColor(params) {\n    this.setState({\n      color: params,\n      fontsize : 16,\n    })\n  }\n  onChangeSize(value) {\n    if (this.state.fontsize + value >=8 && this.state.fontsize + value <= 40  ) {\n      this.setState({\n        fontsize: this.state.fontsize + value\n      })\n    }\n    console.log(this.state.fontsize + value);\n  }\n  resetState() {\n    this.setState({\n      color: 'red',\n      fontsize : 16,\n    })\n  }\n  render() {\n    return (\n\n      <div className=\"container\">\n        <div className=\"app\">\n          <h2 className='title'>\n            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-emoji-smile\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n              <path fill-rule=\"evenodd\" d=\"M4.285 9.567a.5.5 0 0 1 .683.183A3.498 3.498 0 0 0 8 11.5a3.498 3.498 0 0 0 3.032-1.75.5.5 0 1 1 .866.5A4.498 4.498 0 0 1 8 12.5a4.498 4.498 0 0 1-3.898-2.25.5.5 0 0 1 .183-.683z\"/>\n              <path d=\"M7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5zm4 0c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5z\"/>\n            </svg>\n            App Text Setting \n            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-emoji-expressionless\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\n              <path fillRule=\"evenodd\" d=\"M4 10.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5zm5 0a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5z\" />\n            </svg>\n          </h2>\n          <div className=\"app-selector\">\n            <ColorPicker color = {this.state.color} \n            onReceiveColor = {this.onSetColor}\n            />\n            <SizeSetting \n              fontsize = {this.state.fontsize}\n              onChangeSize = {this.onChangeSize}\n            />\n          </div>\n          <Result \n            color = {this.state.color}\n            fontsize = {this.state.fontsize}\n          />\n          <Reset \n          reset = {this.resetState}\n          />\n        </div>\n      </div>\n\n\n\n\n\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}